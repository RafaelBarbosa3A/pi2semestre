package br.com.calçados.ui.venda;

import br.com.calçados.Venda.Venda;
import br.com.calçados.cliente.Cliente;
import br.com.calçados.exception.ProdutoException;
import br.com.calçados.produto.ItemVenda;
import br.com.calçados.produto.Produto;
import br.com.calçados.service.ServicoCliente;
import br.com.calçados.service.ServicoProduto;
import br.com.calçados.service.ServicoVenda;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaFazerVenda extends javax.swing.JFrame {

    TelaAdicionarProduto addProduto = null;
    private Cliente c = new Cliente();
    private List<Produto> p = new ArrayList<Produto>();
    private List<ItemVenda> item = new ArrayList<ItemVenda>();
    private double total;

    public TelaFazerVenda() {
        initComponents();
        campoSoma.setValue(0);
        Date data = new Date(System.currentTimeMillis());
        SimpleDateFormat formatador = new SimpleDateFormat("dd/MM/yyyy");
        Data.setText(formatador.format(data));
        this.setResizable(false);
        tabelaVenda.requestFocus();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel4 = new javax.swing.JLabel();
        jButton4 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        botaoCancelar = new javax.swing.JButton();
        campoProduto = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        campoBuscar = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        botaoFinalizar = new javax.swing.JButton();
        botaoAdicionar = new javax.swing.JButton();
        campoQuant = new javax.swing.JTextField();
        botaoCliente = new javax.swing.JButton();
        botaoProduto = new javax.swing.JButton();
        jLabel6 = new javax.swing.JLabel();
        Data = new javax.swing.JFormattedTextField();
        campoSoma = new javax.swing.JFormattedTextField();
        jLabel7 = new javax.swing.JLabel();
        botaoAlterar = new javax.swing.JButton();
        campoNome = new javax.swing.JTextField();
        jScrollPane2 = new javax.swing.JScrollPane();
        tabelaVenda = new javax.swing.JTable();
        botaoExcluir = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        campoMarca = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        campoEstoque = new javax.swing.JTextField();

        jLabel4.setText("jLabel4");

        jButton4.setText("jButton4");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel2.setText("Codigo:");

        botaoCancelar.setText("Cancelar");
        botaoCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoCancelarActionPerformed(evt);
            }
        });

        campoProduto.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusGained(java.awt.event.FocusEvent evt) {
                campoProdutoFocusGained(evt);
            }
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoProdutoFocusLost(evt);
            }
        });

        jLabel5.setText("Buscar CPF:");

        campoBuscar.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                campoBuscarFocusLost(evt);
            }
        });

        jLabel1.setText("Quantidade:");

        botaoFinalizar.setText("Finalizar");
        botaoFinalizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoFinalizarActionPerformed(evt);
            }
        });

        botaoAdicionar.setText("Adicionar");
        botaoAdicionar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAdicionarActionPerformed(evt);
            }
        });

        botaoCliente.setText("jButton5");
        botaoCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoClienteActionPerformed(evt);
            }
        });

        botaoProduto.setText("jButton6");
        botaoProduto.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoProdutoActionPerformed(evt);
            }
        });

        jLabel6.setText("Data:");

        Data.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter()));
        Data.setEnabled(false);

        campoSoma.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter(new java.text.DecimalFormat("¤#,##0.00"))));
        campoSoma.setToolTipText("");
        campoSoma.setEnabled(false);

        jLabel7.setText("Total venda:");

        botaoAlterar.setText("Alterar");
        botaoAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoAlterarActionPerformed(evt);
            }
        });

        campoNome.setEnabled(false);

        tabelaVenda.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Codigo de Barras", "Marca", "Modelo", "Tamanho", "Cor", "Quantidade", "Preço Total"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Double.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane2.setViewportView(tabelaVenda);

        botaoExcluir.setText("Excluir");
        botaoExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botaoExcluirActionPerformed(evt);
            }
        });

        jLabel3.setText("Marca:");

        campoMarca.setEnabled(false);

        jLabel8.setText("Quant. em estoque:");

        campoEstoque.setEnabled(false);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, jPanel1Layout.createSequentialGroup()
                                .addComponent(jLabel6)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(Data, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jLabel7)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(campoSoma, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(2, 2, 2)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel5)
                                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel3)
                                        .addComponent(jLabel2)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(campoProduto, javax.swing.GroupLayout.DEFAULT_SIZE, 100, Short.MAX_VALUE)
                                            .addComponent(campoBuscar))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(botaoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, 1, Short.MAX_VALUE)
                                            .addComponent(botaoCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 25, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(campoNome, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                                .addComponent(jLabel1)
                                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                                .addComponent(campoQuant, javax.swing.GroupLayout.PREFERRED_SIZE, 50, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addComponent(campoMarca, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(jLabel8)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(campoEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                        .addComponent(botaoAdicionar))))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addComponent(botaoExcluir)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoAlterar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoCancelar, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(botaoFinalizar))))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 378, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(15, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(campoBuscar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoCliente)
                    .addComponent(campoNome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(12, 12, 12)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(campoProduto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(botaoProduto)
                    .addComponent(campoQuant, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoAdicionar)
                    .addComponent(jLabel3)
                    .addComponent(campoMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel8)
                    .addComponent(campoEstoque, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 226, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 15, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(botaoFinalizar)
                    .addComponent(botaoCancelar)
                    .addComponent(botaoAlterar)
                    .addComponent(botaoExcluir))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6)
                    .addComponent(Data, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(campoSoma, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel7))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void botaoProdutoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoProdutoActionPerformed
        TelaAdicionarProduto addProduto = new TelaAdicionarProduto(this, true);
        Produto p = new Produto();
        p = addProduto.getProduto();
        if (p != null) {
            campoProduto.setText(Integer.toString(p.getCodigo()));
            campoProduto.requestFocus();
        }
    }//GEN-LAST:event_botaoProdutoActionPerformed

    private void botaoAdicionarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAdicionarActionPerformed
        if (campoProduto.getText() != null && campoQuant.getText() != null && !"".equals(campoProduto) && !"".equals(campoQuant)) {
            int codigo, quanti = 0;
            codigo = Integer.parseInt(campoProduto.getText());
            quanti = Integer.parseInt(campoQuant.getText());
            ItemVenda itemProduto = new ItemVenda();
            itemProduto.setProduto(codigo);
            itemProduto.setQuant(quanti);
            double soma = 0.00d;
            try {
                soma = (double) campoSoma.getValue();
            } catch (Exception e) {

            }
            try {
                Produto produto = ServicoProduto.obterProduto(codigo);
                double d = 0.00d;
                try {
                    d = produto.getPreco() * quanti;
                } catch (Exception e) {
                }
                itemProduto.setTotal(d);
                if (produto.getSaldo() <= quanti) {
                    JOptionPane.showMessageDialog(rootPane, "Produto com falta de estoque");
                } else {
                    if (!p.isEmpty()) {
                        for (Produto produt : p) {
                            int i = 0;
                            if (produt.getCodigo() == produto.getCodigo()) {
                                item.set(i, itemProduto);
                                calcularTotal();
                                refreshList();
                                return;
                            }
                        }
                    }
                    p.add(produto);
                    item.add(itemProduto);
                    refreshList();
                }
            } catch (Exception e) {

            }
            calcularTotal();
            campoProduto.setText(null);
            campoQuant.setText(null);
        }
    }//GEN-LAST:event_botaoAdicionarActionPerformed

    private void botaoFinalizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoFinalizarActionPerformed
        Venda venda = new Venda();
        DateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        venda.setData(new Date());
        double total = 0d;
        try {
            total = (double) campoSoma.getValue();
        } catch (Exception e) {

        }
        venda.setTotal(total);
        venda.setClienteID(c.getID());

        try {
            ServicoVenda.cadastrarVenda(venda, item);
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                    "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }

        for (Produto produto : p) {
            if (produto != null && produto.getId() >= 0 && !p.isEmpty()) {
                int i = 0;
                try {
                    produto.setSaldo(produto.getSaldo() - item.get(i).getQuant());
                    ServicoProduto.atualizarProduto(produto);
                } catch (Exception e) {

                }
                i++;
            }
        }

        JOptionPane.showMessageDialog(rootPane, "Venda efetuada com sucesso",
                "Venda Registrada", JOptionPane.INFORMATION_MESSAGE);

        p.clear();
        item.clear();

        campoBuscar.setText(null);
        campoProduto.setText(null);
        try {
            refreshList();
        } catch (Exception ex) {

        }
        campoSoma.setValue(null);
        campoQuant.setText(null);
    }//GEN-LAST:event_botaoFinalizarActionPerformed

    private void botaoCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoCancelarActionPerformed
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_botaoCancelarActionPerformed

    private void botaoAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoAlterarActionPerformed
        try {

            final int row = tabelaVenda.getSelectedRow();
            int codigo = (int) tabelaVenda.getValueAt(row, 0);

            if (row >= 0) {

                int x = Integer.parseInt(JOptionPane.showInputDialog("Quantidade de produtos: "));
                for (Produto produto : p) {
                    if (produto.getCodigo() == codigo) {
                        int i = 0;
                        for (ItemVenda itemv : item) {
                            if(itemv.getProduto()==produto.getCodigo()){
                                itemv.setQuant(x);
                                item.set(i, itemv);
                                return;
                            }
                        i++;
                        }
                    }
                }
                calcularTotal();
                refreshList();
            }
        } catch (Exception e) {

            e.printStackTrace();

            JOptionPane.showMessageDialog(rootPane, "Não é possível "
                    + "exibir os detalhes deste produto.",
                    "Erro ao abrir detalhe", JOptionPane.ERROR_MESSAGE);
        }

    }//GEN-LAST:event_botaoAlterarActionPerformed

    private void botaoExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoExcluirActionPerformed
        if (tabelaVenda.getSelectedRow() >= 0) {

            final int row = tabelaVenda.getSelectedRow();
            String nome = (String) tabelaVenda.getValueAt(row, 1);
            int resposta = JOptionPane.showConfirmDialog(rootPane,
                    "Excluir o produto \"" + nome + "\"?",
                    "Confirmar exclusão", JOptionPane.YES_NO_OPTION);
            if (resposta == JOptionPane.YES_OPTION) {
                int codigo = (int) tabelaVenda.getValueAt(row, 0);
                try {
                    for (Produto produto : p) {
                        int i = 0;
                        if (produto.getCodigo() == codigo) {
                            try {
                                p.remove(produto);
                                item.remove(i);
                                refreshList();
                                calcularTotal();
                                return;
                            } catch (Exception e) {
                            }
                        }
                        i++;
                    }
                } catch (Exception e) {
                    e.printStackTrace();
                    JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                            "Falha na Exclusão", JOptionPane.ERROR_MESSAGE);
                }
            }
        }
    }//GEN-LAST:event_botaoExcluirActionPerformed

    private void campoProdutoFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoProdutoFocusLost
        if ((campoProduto.getText() != null && !"".equals(campoProduto.getText())) || !botaoProduto.isRequestFocusEnabled()) {
            int codigo = Integer.parseInt(campoProduto.getText());
            Produto produto = new Produto();
            try {
                produto = ServicoProduto.obterProduto(codigo);
                campoMarca.setText(produto.getMarca());
                campoEstoque.setText(Integer.toString(produto.getSaldo()));
                campoQuant.requestFocus();
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, "Produto removido ou não existente",
                        "Erro", JOptionPane.ERROR_MESSAGE);
                campoProduto.requestFocus();
                return;
            }
        }
    }//GEN-LAST:event_campoProdutoFocusLost

    private void campoBuscarFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoBuscarFocusLost
        if ((campoBuscar.getText() != null && !"".equals(campoBuscar.getText())) || !botaoCliente.isRequestFocusEnabled()) {
            String cpf = campoBuscar.getText();
            Cliente cliente = new Cliente();
            try {
                cliente = ServicoCliente.obterClientePorCPF(cpf);
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane, e.getMessage(),
                        "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
            if (cliente != null) {
                campoNome.setText(cliente.getNome());
                c = cliente;
                campoProduto.requestFocus();
            } else {
                campoNome.setText("Cliente não encontrado");
            }
        } else {
            campoBuscar.requestFocus();
        }

    }//GEN-LAST:event_campoBuscarFocusLost

    private void campoProdutoFocusGained(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_campoProdutoFocusGained
        if (campoNome.getText() == "Cliente não encontrado" || campoNome.getText() == null || campoNome.getText() == "") {
            campoBuscar.requestFocus();
        }
    }//GEN-LAST:event_campoProdutoFocusGained

    private void botaoClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botaoClienteActionPerformed
        TelaAdicionarCliente addCliente = new TelaAdicionarCliente(this, true);
        Cliente c = new Cliente();
        c = addCliente.getCliente();
        if (c != null) {
            campoBuscar.setText(Long.toString(c.getCPF()));
            campoBuscar.requestFocus();
        }
    }//GEN-LAST:event_botaoClienteActionPerformed

    public boolean refreshList() throws ProdutoException, Exception {
        DefaultTableModel model = (DefaultTableModel) tabelaVenda.getModel();
        model.setRowCount(0);
        if (p == null || p.size() <= 0) {
            return false;
        }
        for (int i = 0; i < p.size(); i++) {
            Produto produto = p.get(i);
            if (produto != null) {
                Object[] row = new Object[7];
                row[0] = produto.getCodigo();
                row[1] = produto.getMarca();
                row[2] = produto.getModelo();
                row[3] = produto.getTamanho();
                row[4] = produto.getCor();
                row[5] = item.get(i).getQuant();
                row[6] = item.get(i).getTotal();
                model.addRow(row);
            }
        }
        return true;
    }

    public void calcularTotal() {
        double soma = 0.00d;
        if (!p.isEmpty()) {
            for (Produto produto : p) {
                int i = 0;
                soma += (produto.getPreco() * item.get(i).getQuant());
            }
        } else {
            total = 0.00d;
        }
        total = soma;
        campoSoma.setValue(total);
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFazerVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFazerVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFazerVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFazerVenda.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaFazerVenda().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JFormattedTextField Data;
    private javax.swing.JButton botaoAdicionar;
    private javax.swing.JButton botaoAlterar;
    private javax.swing.JButton botaoCancelar;
    private javax.swing.JButton botaoCliente;
    private javax.swing.JButton botaoExcluir;
    private javax.swing.JButton botaoFinalizar;
    private javax.swing.JButton botaoProduto;
    private javax.swing.JTextField campoBuscar;
    private javax.swing.JTextField campoEstoque;
    private javax.swing.JTextField campoMarca;
    private javax.swing.JTextField campoNome;
    private javax.swing.JTextField campoProduto;
    private javax.swing.JTextField campoQuant;
    private javax.swing.JFormattedTextField campoSoma;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable jTable1;
    private javax.swing.JTable tabelaVenda;
    // End of variables declaration//GEN-END:variables
}
